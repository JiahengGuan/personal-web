{"version":3,"sources":["images/Jiaheng.jpg","images/csg.png","images/e-comm.png","images/Grab_Pics.jpg","images/ReminderList.jpg","images/spotify.jpg","images/Webgen.png","component/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Content","Footer","Title","Typography","Paragraph","Panel","Collapse","Home","props","id","className","class","style","textAlign","src","Jiaheng","alt","gutter","span","title","bordered","GP","href","SP","ReminderList","webgen","ecomm","csg","accordion","header","key","marginTop","App","exact","path","render","Boolean","window","location","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31e45e10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Jiaheng.b36a0743.jpg\";","module.exports = __webpack_public_path__ + \"static/media/csg.97a974d2.png\";","module.exports = __webpack_public_path__ + \"static/media/e-comm.f86c10d1.png\";","module.exports = __webpack_public_path__ + \"static/media/Grab_Pics.1a140d41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ReminderList.0e54bd53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spotify.f243d108.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Webgen.2fe3a22f.png\";","import React from 'react';\r\n//import { Timeline, Icon } from 'antd';\r\nimport { Layout } from 'antd';\r\nimport { Typography} from 'antd';\r\nimport Jiaheng from '../images/Jiaheng.jpg';\r\nimport csg from '../images/csg.png';\r\nimport ecomm from '../images/e-comm.png';\r\nimport GP from '../images/Grab_Pics.jpg';\r\nimport { Collapse } from 'antd';\r\nimport ReminderList from '../images/ReminderList.jpg';\r\nimport SP from '../images/spotify.jpg';\r\nimport webgen from '../images/Webgen.png';\r\nimport { Card, Col, Row } from 'antd';\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Title, Paragraph } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\n\r\nfunction Home(props) {\r\n    return (\r\n            <div id = \"homepage\">\r\n                <Layout className=\"layout\">\r\n                    <Header>\r\n                    </Header>\r\n                    <Content className = \"content\" >\r\n                        <div class = \"blocks\" >\r\n                            <div class=\"odd\">\r\n                                <Title style={{ textAlign: 'center' }} >Jiaheng Guan</Title>\r\n                                <img src={Jiaheng} alt=\"Avatar\" class=\"prof_picture\" ></img>\r\n                            </div>\r\n                            <div class=\"even\">\r\n                                <Typography className = \"typolog\" >\r\n                                    <Title >About Me</Title>\r\n                                    <Paragraph className = \"self_intro\">\r\n                                    My name is Jiaheng Guan. Completed Bachelor degrees at Queens College. I'm currently finding a full-time software developer for entry level.\r\n                                    </Paragraph>\r\n                                    <br />\r\n                                </Typography>\r\n                            </div>\r\n        \r\n                            {/* <div id = \"Timeline\" class=\"odd\" >\r\n                                <Title >Experience</Title>\r\n                                <Timeline mode=\"alternate\">\r\n                                    <Timeline.Item>\r\n                                        <h3>Aug 2017 (Start Bachelor Degree)</h3>Start Bachelor degree in Computer Science at Stony Brook University \r\n                                    </Timeline.Item>\r\n                                    <Timeline.Item color=\"green\">\r\n                                        <h3>Jan 2019-May 2019 (Teaching Assistant)</h3>Teaching Assistant for Data Structure\r\n                                    </Timeline.Item>\r\n                                    <Timeline.Item color=\"brown\">\r\n                                        <h3>July 2019 - May 2020 (Web Developer)</h3> Work in Stony Brook University CS Department as a Web Developer in New York \r\n                                    </Timeline.Item>\r\n                                    <Timeline.Item color=\"brown\">\r\n                                        <h3>May 2020 (Graduated)</h3>Completed <b>Bachelor Degree</b> at <b>Stony Brook University</b> \r\n                                    </Timeline.Item>\r\n                                    <Timeline.Item color=\"purple\">\r\n                                        <h3>June 2020 - Aug 2020 (Software Engineering Intern)</h3> Software Engineering Intern at <b>MMA Pan Asia Fund</b> in Taiwan \r\n                                    </Timeline.Item>\r\n                                    <Timeline.Item color=\"blue\">\r\n                                        <h3>Aug 2020 - May 2021(Graduated)</h3> Completed <b>Master Degree</b> at <b>Stony Brook University</b>\r\n                                    </Timeline.Item>\r\n                                    <Timeline.Item color=\"blue\">\r\n                                        <h3>June 2021 (Software Developer)</h3> Full-time Software Developer at <b>General Motors</b> in Arizona (Current)\r\n                                    </Timeline.Item>\r\n                                    <Timeline.Item color=\"red\">\r\n                                        <h3>Now</h3>\r\n                                    </Timeline.Item>\r\n                                </Timeline>\r\n                            </div> */}\r\n                            <div class=\"even\" >\r\n                                <Title >Major Projects</Title>\r\n                                <div class=\"card-section\">\r\n                                    <Row gutter={16}>\r\n                                    <Col span={8}>\r\n                                            <Card className=\"projects\" title=\"Grab Pics\" bordered={false}>\r\n                                                <img src={GP}  alt=\"\" class=\"project_picture\" ></img>\r\n                                                <div class=\"overlay\">\r\n                                                    <div class=\"text\"><a href=\"https://github.com/JiahengGuan/Grap-Pics.git\">Go to Github</a></div>\r\n                                                </div> \r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Card className=\"projects\" title=\"Spotify\" bordered={false}>\r\n                                                <img src={SP}  alt=\"\" class=\"project_picture\" ></img>\r\n                                                <div class=\"overlay\">\r\n                                                    <div class=\"text\"><a href=\"https://github.com/JiahengGuan/Spotify.git\">Go to Github</a></div>\r\n                                                </div> \r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Card className=\"projects\" title=\"ReminderList\" bordered={false}>\r\n                                                <img src={ReminderList}  alt=\"\" class=\"project_picture\" ></img>\r\n                                                <div class=\"overlay\">\r\n                                                    <div class=\"text\"><a href=\"https://github.com/JiahengGuan/ReminderList.git\">Go to Github</a></div>\r\n                                                </div> \r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n                                    <Row gutter={16}>\r\n                                        <Col span={8}>\r\n                                            <Card className=\"projects\" title=\"WebGen\" bordered={false}>\r\n                                                <img src={webgen}  alt=\"\" class=\"project_picture\" ></img>\r\n                                                <div class=\"overlay\">\r\n                                                <div class=\"text\"><a href=\"https://web4bio.github.io/webgen/\">Go to Website</a></div>\r\n                                                </div> \r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Card className=\"projects\" title=\"E-Commerce Website\" bordered={false}>\r\n                                                <img src={ecomm}  alt=\"\" class=\"project_picture\" ></img>\r\n                                                <div class=\"overlay\">\r\n                                                <div class=\"text\"><a href=\"https://github.com/fenghsi/e-commerce-project\">Go to Github</a></div>\r\n                                                </div> \r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col span={8}>\r\n                                            <Card className=\"projects\" title=\"Course site Generator\" bordered={false}>\r\n                                                <img src={csg}  alt=\"\" class=\"project_picture\" ></img>\r\n                                                <div class=\"overlay\">\r\n                                                <div class=\"text\"><a href=\"https://github.com/fenghsi/course_site_generator\">Go to Github</a></div>\r\n                                                </div>              \r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"odd\">\r\n                            <Title >Minor Projects</Title>\r\n                            <Collapse accordion>\r\n                                <Panel header=\"Category-Partition\" key=\"1\">\r\n                                <p>Category-Partition will generate between 60 and 100 test-case specifications for a simplified version of the copy utility.\r\n                                    <a href= \"https://github.com/JiahengGuan/Category-Partition.git\"> Click here to view in Github</a></p>\r\n                                </Panel>\r\n                                <Panel header=\"White-Box-Testing\" key=\"2\">\r\n                                <p>Get familiar with white-box testing and understand some subtleties of structural coverage.\r\n                                    <a href=\"https://github.com/JiahengGuan/White-Box-Testing.git\"> Click here to view in Github</a></p>\r\n                                </Panel>\r\n                                <Panel header=\"TipsCalculator\" key=\"3\">\r\n                                <p>A simple Android app to calculate out the tips and total of 3 different percentages for each person.\r\n                                    <a href=\"https://github.com/JiahengGuan/TipsCalculator.git\"> Click here to view in Github</a></p>\r\n                                </Panel>\r\n                                <Panel header=\"ReadAndWrite\" key=\"4\">\r\n                                <p>read the source file contents in the parent process and write the contents through the pipe to the output file.\r\n                                    <a href=\"https://github.com/JiahengGuan/ReadAndWrite.git\"> Click here to view in Github</a></p>\r\n                                </Panel>\r\n                            </Collapse>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"even\">\r\n                                <Typography className = \"typolog\" >\r\n                                    <Title >Contact</Title>\r\n                                    <Paragraph className = \"self_intro\">\r\n                                       Email: gjh1547485384@gmail.com\r\n                                    </Paragraph>\r\n                                    <br /><br /><br />\r\n                                </Typography>\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center', marginTop:'-100px' }}>©2022 Created by Jiaheng Guan</Footer>\r\n\r\n                </Layout>\r\n            </div>\r\n     );\r\n}\r\n\r\nexport default Home; ","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from './component/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n          <div className=\"container\">\r\n              <Switch>\r\n                  <Route exact path=\"/personal-web\" render={() => (<Home/>)} />\r\n              </Switch>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}